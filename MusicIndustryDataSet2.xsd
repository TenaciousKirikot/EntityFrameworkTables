<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MusicIndustryDataSet2" targetNamespace="http://tempuri.org/MusicIndustryDataSet2.xsd" xmlns:mstns="http://tempuri.org/MusicIndustryDataSet2.xsd" xmlns="http://tempuri.org/MusicIndustryDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MusicIndustryConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MusicIndustryConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.EntityFrameworkTables.Properties.Settings.GlobalReference.Default.MusicIndustryConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SongSingersTableAdapter" GeneratorDataComponentClassName="SongSingersTableAdapter" Name="SongSingers" UserDataComponentName="SongSingersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MusicIndustryConnectionString (Settings)" DbObjectName="MusicIndustry.dbo.SongSingers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SongSingers] WHERE (([Song_Id] = @Original_Song_Id) AND ([Singer_Id] = @Original_Singer_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Song_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Song_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Singer_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Singer_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SongSingers] ([Song_Id], [Singer_Id]) VALUES (@Song_Id, @Singer_Id);
SELECT Song_Id, Singer_Id FROM SongSingers WHERE (Singer_Id = @Singer_Id) AND (Song_Id = @Song_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Song_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Song_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Singer_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Singer_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Song_Id, Singer_Id FROM dbo.SongSingers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SongSingers] SET [Song_Id] = @Song_Id, [Singer_Id] = @Singer_Id WHERE (([Song_Id] = @Original_Song_Id) AND ([Singer_Id] = @Original_Singer_Id));
SELECT Song_Id, Singer_Id FROM SongSingers WHERE (Singer_Id = @Singer_Id) AND (Song_Id = @Song_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Song_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Song_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Singer_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Singer_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Song_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Song_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Singer_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Singer_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Song_Id" DataSetColumn="Song_Id" />
              <Mapping SourceColumn="Singer_Id" DataSetColumn="Singer_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MusicIndustryDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="MusicIndustryDataSet2" msprop:Generator_UserDSName="MusicIndustryDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="SongSingers" msprop:Generator_TableClassName="SongSingersDataTable" msprop:Generator_TableVarName="tableSongSingers" msprop:Generator_TablePropName="SongSingers" msprop:Generator_RowDeletingName="SongSingersRowDeleting" msprop:Generator_RowChangingName="SongSingersRowChanging" msprop:Generator_RowEvHandlerName="SongSingersRowChangeEventHandler" msprop:Generator_RowDeletedName="SongSingersRowDeleted" msprop:Generator_UserTableName="SongSingers" msprop:Generator_RowChangedName="SongSingersRowChanged" msprop:Generator_RowEvArgName="SongSingersRowChangeEvent" msprop:Generator_RowClassName="SongSingersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Song_Id" msprop:Generator_ColumnVarNameInTable="columnSong_Id" msprop:Generator_ColumnPropNameInRow="Song_Id" msprop:Generator_ColumnPropNameInTable="Song_IdColumn" msprop:Generator_UserColumnName="Song_Id" type="xs:int" />
              <xs:element name="Singer_Id" msprop:Generator_ColumnVarNameInTable="columnSinger_Id" msprop:Generator_ColumnPropNameInRow="Singer_Id" msprop:Generator_ColumnPropNameInTable="Singer_IdColumn" msprop:Generator_UserColumnName="Singer_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SongSingers" />
      <xs:field xpath="mstns:Song_Id" />
      <xs:field xpath="mstns:Singer_Id" />
    </xs:unique>
  </xs:element>
</xs:schema>